---
title: "The Essence of R"
subtitle: "LU eScience Hub: Programming language day"
author: "Linda Hartman"
institute: Lund University
date: "2023-04-11"
date-format: iso
title-slide-attributes:
  data-background-image: "img/Universitetshusetvt201019.jpg"
  data-background-size: contain
  data-background-opacity: "0.3"
execute: 
  echo: true
format: 
  revealjs:
    smaller: false
    incremental: true 
    theme: white
    slide-number: c/t #< collapsed/total
editor: visual
---

##  {background-image="img/Rlogo.png" background-size="80px" background-position="top 10px left 10px"}

```{r}
#| echo: false
#| warning: false
#| message: false
#data("penguins", package = "palmerpenguins")
library(tidyverse)
library(gt)
options(width = 70)
```

```{=html}
<style type="text/css">
    :root {
        --r-main-font-size: 30px;
    }
</style>
```
-   a language and environment for statistical computing and graphics

-   R is best as a [statistical tool]{.fragment .highlight-red}, thus ideal for academics, scientists, engineers, economers, ...

-   Core distribution and contributed libraries (19347 packages on March 31 2023) ![](img/r-packages-2.png){fig-align="right" width="50%"} <!-- {.absolute bottom="0" left="0" width="400"} -->

-   Simplified workflow with Rstudio (IDE) ![](img/Rstudio.png){.absolute bottom="0" right="0" width="200" height="200"}

-   Very active community for development and support

## Example: Penguins {.nonincremental}

::: columns
::: {.column width="50%"}
![Diagram of penguin head with indication of bill length and bill depth.](https://allisonhorst.github.io/palmerpenguins/reference/figures/culmen_depth.png)
:::

::: {.column width="50%"}
Contents:

-   Cleansing and prepping data

-   Descriptive statistics

-   Graphics

-   Modeling
:::
:::

## Cleansing and prepping data

-   The `tidyverse` package

. . .

```{r}
penguins <- palmerpenguins::penguins
glimpse(penguins) #Quick overview
```

-   If you noticed above, there was some NA or missing data. We can remove those rows for now (and keep a subset of the variables).

. . .

```{r}
penguins <- penguins %>% drop_na() %>% select(species,sex,bill_length_mm,bill_depth_mm)
```

```{r}
#| echo: false
penguins %>% 
  glimpse()
```

## Descriptive statistics I

-   With `dplyr` in `tidyverse` package or here with `skimr` package

. . .

::: {style="font-size: 80%;"}
```{r}
skimr::skim(penguins)
```
:::

## Descriptive statistics cont. (numeric variables)

::: {style="font-size: 80%;"}
```{r}
#| echo: true
#| output: false
skimr::skim(penguins)
```

```{r}
#| echo: false
#| output: true
skimr::skim(penguins) %>% 
skimr::yank("numeric") 
```
:::

## Descriptive statistics by group

```{r}
#| echo: true
#| output: false
#| code-line-numbers: "2|1-3"
penguins %>% 
  group_by(species,sex) %>% 
  skimr::skim() %>% skimr::yank("numeric") 
```

. . .

```{r}
#| echo: false
#| output: true
penguins %>% 
  group_by(species,sex) %>% 
  skimr::skim() %>% skimr::yank("numeric") %>% 
  kableExtra::kbl(digits = 1) %>% 
  kableExtra::collapse_rows(1:3)
```

# Graphics

## Graphics: `ggplot2`

-   Easy publication quality plotting with `ggplot2`
-   Example distribution of Bill depth

. . .

```{r}
#| fig-width: 8
#| fig-height: 4
#| fig-align: center
#| code-line-numbers: "1-2|1-3|1-4|1-5"
penguins %>% 
  ggplot(aes(bill_depth_mm, fill = species)) + 
  geom_density(color = "white", alpha = 0.5) +
  scale_fill_manual(values = c("darkorange","purple","cyan4")) +
  labs(x = "Bill depth (mm)") + ggtitle("Bill depth per species")
```

## Graphics: Scatter with trendline

```{r}
#| fig-width: 8
#| fig-height: 4
#| fig-align: center
#| out-width: "50%"
#| message: false
#| code-line-numbers: "1-2|1-3|1-4|1-5"
penguins %>% 
  ggplot(aes(x = bill_length_mm, y = bill_depth_mm)) + 
  geom_point(size = 2, alpha = 0.8) +
  geom_smooth(method = "lm")+
  labs(x = "Bill length (mm)", y = "Bill depth (mm)") 

```

## Scatter with trendline per species

If we control for species a quite different picture appear...

. . .

```{r}
#| echo: true
#| output: false 
#| fig-width: 8
#| fig-height: 4
#| fig-align: center
#| message: false
#| code-line-numbers: "2"
penguins %>% 
  ggplot(aes(x = bill_length_mm, y = bill_depth_mm, color=species)) + 
  geom_point(size = 2, alpha = 0.8) +
  geom_smooth(method = "lm")+
  labs(x = "Bill length (mm)", y = "Bill depth (mm)")

```

. . .

```{r}
#| echo: false
#| output: true 
#| fig-width: 8
#| fig-height: 4
#| fig-align: center
#| message: false
#| code-line-numbers: "2"
penguins %>% 
  ggplot(aes(x = bill_length_mm, y = bill_depth_mm, color=species)) + 
  geom_point(size = 2, alpha = 0.8) +
  geom_smooth(method = "lm")+
  labs(x = "Bill length (mm)", y = "Bill depth (mm)")

```

-   An example of Simpsons paradox...

# Statistical models

## Example: Linear regression

```{r}
lm_bill <- lm(bill_depth_mm ~bill_length_mm  + species, data=penguins)

summary(lm_bill)
```

. . .

```{r}
# coef & confint
cbind(coef(lm_bill), confint(lm_bill)) %>% print(digit=2) 
```

## Statistical models

::: {non-incremental}
-   R implementations for all standard (and non-standard...) statistical models
-   *logistic, poisson, time-series analysis, quantile regression*, ...
-   either in *base* installation or in contributed *packages*
:::

-   Ex logistic regression

. . .

```{r}
penguins$male=as.numeric(penguins$sex=="male")
glm_bill <- glm(male ~bill_depth_mm + bill_length_mm, family="binomial",
                data=penguins %>% filter(species=="Adelie"))

summary(glm_bill)


```

##  {background-image="img/E-P5vPtXEA0MBYS.jpeg" background-size="contain"}

## Other nice features:

-   Great support for **Literate programming**, i.e. building reports or presentations with code and comments intertwined

-   Exploring models: Efficient to **explore multiple relationships** in data simultaneously.

. . .

Example (code in presentation):

```{r}
#| echo: false
model_inputs <- tibble(
  model_form = c(
    list(bill_depth_mm ~ species),
    list(bill_depth_mm ~ bill_length_mm),
    list(bill_depth_mm ~ bill_length_mm + species),
    list(bill_depth_mm ~ bill_length_mm + species+sex)
    ),
  data = list(penguins)
) 

model_metrics <- model_inputs %>% 
  rowwise(model_form, data) %>% 
  summarize(lm = list(lm(model_form, data = data)), .groups = "drop") %>% 
  rowwise(model_form, lm, data) %>% 
  summarise(broom::glance(lm), .groups = "drop")
```

```{r}
#| echo: false
model_metrics %>% 
  select(model_form, r.squared:p.value) %>% 
  mutate(model_form = as.character(model_form)) %>% 
  gt::gt() %>% 
  gt::fmt_number(r.squared:statistic) %>% 
  gt::fmt_scientific(p.value) %>% 
  gt::cols_width(
    model_form ~ px(150)
  )
```

# Machine learning

## Machine learning with `caret` or `tidymodels`

Efficient support for machine learning:

-   unified **interfaces** to tons of models (**regression, random forest, boosting, Support-Vector-Machines, Neural networks, ...** )
-   provide toolkit for **tuning** and resampling (CV)
-   helper functions for **measuring performance**
-   one of the first **parallel processing** implementations in R
-   ML workflow automation (inspired by sci-kit learn)

## Summary {background-image="img/Rlogo.png" background-size="80px" background-position="top 45px left 40px"}

-   a language and environment for statistical computing and graphics
-   including efficient data preparation and cleaning
-   excellent graphics
-   excellent for statistical analysis and machine learning

. . .

Recommended reading:

- R for Data Science: https://r4ds.had.co.nz/
- Tidy Modeling with R: https://www.tmwr.org/ 

. . .

::: {.absolute style="font-size: 1.5rem;" bottom="0"}
Thanks to Dmytro Perepolkin for inspiration and help with quarto

Palmer penguins code inspired by https://rstudio-conf-2022.github.io/get-started-quarto/
:::

::: footer
Learn more: [Link to executable R code for this presentation](https://github.com/lindahartman/Essence_of_R.git)
:::
